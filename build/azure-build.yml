# trigger:
# - main

variables:
    BuildConfiguration: Release
    DotNetVersion: 8.0.100-rc.2.23502.2
    VSVERSION: 2022/Preview

stages:
- stage: BuildAndroid
  jobs:
  - job: BuildMAUIApps
    displayName: Build MAUI App
    pool:
      vmImage: 'windows-2022'
      demands:
      - MSBuild
      
    steps:
    
    - task: PowerShell@2
      displayName: Install Visual Studio Preview
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -UseBasicParsing -Uri "https://aka.ms/vs/install/latest/vs_setup.exe" -OutFile "$env:TEMP\dd_vs_setup.exe"
          & "$env:TEMP\dd_vs_setup.exe" --update --quiet --wait | Out-Null
                    
          Invoke-WebRequest -UseBasicParsing -Uri "https://aka.ms/vs/$(VSVERSION)/vs_enterprise.exe" -OutFile "$env:TEMP\dd_vs_enterprise.exe"
          & "$env:TEMP\dd_vs_enterprise.exe" --quiet --norestart --wait --includeRecommended --add Microsoft.VisualStudio.Workload.NetCrossPlat | Out-Null

    - task: UseDotNet@2
      displayName: .NET Version
      inputs:
        packageType: 'sdk'
        version: '$(DotNetVersion)'
    
    - task: PowerShell@2
      displayName: Install .NET MAUI
      inputs:
        targetType: 'inline'
        script: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui android

    - task: Bash@3
      displayName: Restore nuget
      inputs:
        targetType: 'inline'
        script: |
          src/ThymeToPlant/ThymeToPlant.sln

    - task: Bash@3
      displayName: Run Unit Test
      inputs:
        targetType: 'inline'
        script: |
          dotnet test src/ThymeToPlant/ThymeToTest/ThymeToTest.csproj --logger trx --configuration Debug --collect:"XPlat Code Coverage"

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: |
          **/testResults.trx
          **/*.trx

     # Publish code coverage report to the pipeline
    - task: PublishCodeCoverageResults@1
      condition: succeededOrFailed()
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/**/*.cobertura.xml 

  # https://docs.microsoft.com/en-us/dotnet/maui/android/deployment/overview
    - task: Bash@3
      displayName: Build Android App
      inputs:
        targetType: 'inline'
        script: |
          cd src/ThymeToPlant/ThymeToPlant
          dotnet publish -f net7.0-android -c Release

    # Signing Android App : https://docs.microsoft.com/en-us/azure/devops/pipelines/apps/mobile/app-signing?view=azure-devops&tabs=apple-install-during-build#sign-your-android-app

  #   - task: CopyFiles@2
  #     inputs:
  #       Contents: |
  #         **\**\6.0\Apps\WeatherTwentyOne\src\WeatherTwentyOne\bin\Release\net7.0-android\publish\*.apk
  #       TargetFolder: '$(Build.ArtifactStagingDirectory)'

    
  #   # https://docs.microsoft.com/en-us/dotnet/maui/windows/deployment/overview
  #   - task: PowerShell@2
  #     displayName: Build Windows MSIX
  #     inputs:
  #       targetType: 'inline'
  #       script: |
  #         cd 6.0\Apps\WeatherTwentyOne\src\
  #         dotnet publish -f net7.0-windows10.0.19041.0 -c Release

  #   - task: CopyFiles@2
  #     inputs:
  #       Contents: |
  #         **\**\6.0\Apps\WeatherTwentyOne\src\WeatherTwentyOne\bin\Release\net7.0-windows10.0.19041.0\win10-x64/**/*.msix
  #         6.0\Apps\WeatherTwentyOne\src\WeatherTwentyOne\bin\Release\net7.0-windows10.0.19041.0\win10-x64/**/*.msix
  #       TargetFolder: '$(Build.ArtifactStagingDirectory)'

  #   - task: PublishBuildArtifacts@1
  #     inputs:
  #       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #       ArtifactName: 'drop_artifacts'
  #       publishLocation: 'Container'